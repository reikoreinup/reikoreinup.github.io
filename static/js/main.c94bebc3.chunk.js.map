{"version":3,"sources":["Menu/menuStyles.js","Menu/Menu.js","Title/titleStyles.js","Title/Title.js","Content/contentStyles.js","Content/textComponentStyles.js","CustomHooks/useInterval.js","Content/TextComponent.js","Content/Content.js","App.js","serviceWorker.js","index.js"],"names":["menuStyles","makeStyles","theme","menu","position","top","right","menuButton","margin","spacing","fontFamily","aboutButton","Menu","classes","Box","className","mr","display","color","Button","variant","titleStyles","title","left","fontSize","Title","Fade","in","timeout","contentStyles","content","width","textAlign","subText","textComponentStyles","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","TextComponent","props","text","thisIndex","setNextIndex","useState","isFadingIn","setIsFadingIn","prevState","mainText","Content","count","setCount","texts","container","length","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c94bebc3.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core/styles\";\n\nexport const menuStyles = makeStyles(theme => ({\n   menu: {\n      position: 'fixed',\n      top: '2vh',\n      right: '2vw',\n   },\n   menuButton: {\n      margin: theme.spacing(1),\n      fontFamily: 'Comfortaa'\n   },\n   aboutButton: {\n\n   }\n\n}));","import React from \"react\";\nimport {menuStyles} from \"./menuStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\n\n\nconst Menu = () => {\n    const classes = menuStyles();\n\n    return <Box className={classes.menu}>\n        <Box mr={5} display={'inline'} color={\"inherit\"}>\n            <Button className={classes.aboutButton}>\n                About\n            </Button>\n        </Box>\n        <Box display={'inline'}>\n            <Button className={classes.menuButton} variant={\"contained\"}>\n                Get started\n            </Button>\n        </Box>\n    </Box>\n};\n\nexport default Menu;","import {makeStyles} from \"@material-ui/core/styles\";\n\nexport const titleStyles = makeStyles(theme => ({\n   title: {\n      fontFamily: 'Parisienne',\n      position: 'fixed',\n      top: '30vh',\n      left: '10vw',\n      fontSize: '20rem',\n   }\n\n}));","import React from \"react\";\nimport {titleStyles} from \"./titleStyles\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst Title = () => {\n    const classes = titleStyles();\n    return <Fade in={true} timeout={3000}>\n        <div className={classes.title}>\n            laat\n        </div>\n    </Fade>\n};\n\nexport default Title;","import {makeStyles} from \"@material-ui/core/styles\";\n\nexport const contentStyles = makeStyles(theme => ({\n    content: {\n        position: 'fixed',\n        fontSize: '5rem',\n        fontFamily: 'Comfortaa',\n        width: '40%',\n        top: '30vh',\n        right: '5vw',\n        textAlign: 'center',\n    },\n    subText: {\n        fontSize: '2rem'\n    }\n}));","import {makeStyles} from \"@material-ui/core/styles\";\n\nexport const textComponentStyles = makeStyles(theme => ({\n    subText: {\n        fontSize: '2rem'\n    }\n}));","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};\n\nexport default useInterval;","import React, {useState} from \"react\";\nimport {textComponentStyles} from \"./textComponentStyles\";\nimport Fade from \"@material-ui/core/Fade\";\nimport useInterval from \"../CustomHooks/useInterval\";\n\nconst TextComponent = (props) => {\n    const {text, thisIndex, setNextIndex} = props;\n    const [isFadingIn, setIsFadingIn] = useState(false);\n    const classes = textComponentStyles();\n    const fadingLength = 4000;\n\n    useInterval(() => {\n        setIsFadingIn(prevState => !prevState);\n        if (!isFadingIn) {\n            setNextIndex(thisIndex + 1)\n        }\n    }, fadingLength);\n\n    return <Fade in={isFadingIn} timeout={fadingLength}>\n        <div>\n            {text.mainText}\n            <div className={classes.subText}>\n                {text.subText}\n            </div>\n        </div>\n\n    </Fade>\n};\n\nexport default TextComponent;","import React, {useState} from \"react\";\nimport {contentStyles} from \"./contentStyles\";\nimport TextComponent from \"./TextComponent\";\n\nconst Content = () => {\n\n    const [count, setCount] = useState(0);\n    //const [activeStep, setActiveStep] = useState(0);\n    const classes = contentStyles();\n    //\n    // const handleNext = () => {\n    //     setActiveStep(prevActiveStep => prevActiveStep + 1);\n    // };\n    //\n    // const handleBack = () => {\n    //     setActiveStep(prevActiveStep => prevActiveStep - 1);\n    // };\n\n\n    const texts = [\n        {\n            mainText: \"Up and running in 2 minutes\",\n            subText: \"Get a working website fast and hassle-free.\"\n        },\n        {\n            mainText: \"Innovative design\",\n            subText: \"Use our modern layouts inspired by clean looks.\"\n        },\n        {\n            mainText: \"Pay per transaction\",\n            subText: \"No upfront costs. Pay only when you sell.\"\n        },\n        {\n            mainText: \"Ridiculously simple\",\n            subText: \"The hardest part will be picking a name for your shop.\"\n        }\n    ];\n\n    const getText = () => {\n        if (count > 30) {\n            return {\n                mainText: \"miks ikka veel lahti see\",\n                subText: \"ausalt ka\"\n            }\n        }\n        return texts[count % texts.length]\n    };\n\n    return <div className={classes.container}>\n        <div className={classes.content}>\n            <TextComponent text={getText()} thisIndex={count} setNextIndex={setCount}/>\n        </div>\n    </div>\n\n};\n\nexport default Content;","import React from 'react';\nimport './App.css';\nimport Menu from \"./Menu/Menu\";\nimport Title from \"./Title/Title\";\nimport Content from \"./Content/Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu/>\n      <Title/>\n      <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}